export default function Home({ headers }) {
  const headerRows = [];
  for (const header in headers) {
    headerRows.push(
      <tr key={header}>
        <td>
          <details>
            <summary className="focus:outline-none">
              <samp className="whitespace-nowrap">{header}</samp>
            </summary>
            <samp className="ml-10">{headers[header]}</samp>
          </details>
        </td>
      </tr>
    );
  }

  return (
    <>
      <h2>What is this?</h2>
      <p>
        The body of the HTTP response youâ€™re viewing is HTML is generated by a
        Next.js server running on Heroku. The table below lists all the HTTP
        headers that were included in your request.
      </p>
      <table>
        <thead>
          <tr>
            <th>HTTP Header</th>
          </tr>
        </thead>
        <tbody>{headerRows}</tbody>
      </table>
      <h2>
        Is traffic to{" "}
        <a href="https://www.cloudflare.coffee">www.cloudflare.coffee</a>{" "}
        proxied through Cloudflare?
      </h2>
      <p>
        Yes. We can confirm traffic is proxied using the Cloudflare dashboard
        and we can see <samp>cf-*</samp> headers in the table above.
      </p>
      <p>
        <img
          src="/proxy-through-cloudflare.png"
          width={2048}
          height={406}
          alt="Cloudflare dashboard showing traffic to www.cloudflare.coffee is proxied through Cloudflare"
        />
      </p>
      <h2>Secure page</h2>
      <p>
        Access to <a href="/secure">the secure page</a> is restricted to a
        particular user or a group of users.
      </p>
    </>
  );
}

export async function getServerSideProps(context) {
  const sortedHeaders = Object.keys(context.req.headers)
    .sort()
    .reduce((obj, key) => {
      obj[key] = context.req.headers[key];
      return obj;
    }, {});
  return {
    props: {
      headers: { ...sortedHeaders },
    },
  };
}
